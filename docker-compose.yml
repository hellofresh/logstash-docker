
version: '2'
services:
  # Spawns a container with a logstash service inside which is supervised by runit.
  logstash:
    image: quay.io/hellofresh/logstash-docker:wespi-0.5
    container_name: logstash
    networks:
      lognet:
        aliases:
         - logstash
    environment:
      CONSUL_START_JOIN: 'consul-server'
      CONSUL_ENCRYPT: 'Tq/xU3fTPyBRoA4R4CxOKg=='
      CONSUL_SERVICE_CONFIG: '{ 
        "service": {
            "check": {
                "interval": "15s", 
                "script": "curl -s -XGET http://127.0.0.1:8080/mon | grep -v 404"
            }, 
            "name": "logstash", 
            "port": 5044, 
            "tags": [
                "logstash", 
                "docker-env"
            ]
        }
        }'
    # This redundant definition is necessary for docker-compose-api used in specinfra-backend-docker_compose
    # to make the hostname resolution in the integration tests work.
    links:
      - consul:consul-server

  consul:
    image: consul:v0.6.4
    ports:
      # Bind Consul WebUI port to enable access to http://localhost:8500/ui
      - "8500:8500"
    networks:
      lognet:
        aliases:
          - consul-server
    environment:
      # Use the same pre-shared secret as the one in the Ansible consul role (key 'consul_encrypt' in consul/defaults/main.yml).
      # Define Consul client address to bind to all IPs inside container to enable access to Consul WebUI from Docker host machine.
      CONSUL_LOCAL_CONFIG: '{"encrypt": "Tq/xU3fTPyBRoA4R4CxOKg==", "client_addr": "0.0.0.0"}'

networks:
  lognet:
    driver: bridge